{"expireTime":9007200851379627000,"key":"transformer-remark-markdown-ast-54299a181ea9cff0eeac0dd15189f102-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-emojis-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://p5.ssl.qhimg.com/t01771478e667255d55.png","alt":"mousetrack_img","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":68,"offset":68},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":68,"offset":68},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"需求背景","position":{"start":{"line":4,"column":5,"offset":74},"end":{"line":4,"column":9,"offset":78},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":70},"end":{"line":4,"column":9,"offset":78},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"🚩 为了统计分析用户页面行为，我们经常需要收集鼠标在页面上的各类操作，如页面中按钮和链接的点击和统计较准确的访客页面停留时间。而本文主要记录在解决","position":{"start":{"line":6,"column":1,"offset":80},"end":{"line":6,"column":75,"offset":154},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">分别记录鼠标在页面各个区域的停留时间总和</code>","position":{"start":{"line":6,"column":75,"offset":154},"end":{"line":6,"column":97,"offset":176},"indent":[]}},{"type":"text","value":"这一问题的技术方案的尝试。","position":{"start":{"line":6,"column":97,"offset":176},"end":{"line":6,"column":110,"offset":189},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":80},"end":{"line":6,"column":110,"offset":189},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"简化问题描述：将浏览器的可视窗口平均分为 2 × 2 的 4 份， 如图。分别记录鼠标在各个区域的停留时间总和，当然，不能影响页面的正常功能的使用。","position":{"start":{"line":8,"column":1,"offset":191},"end":{"line":8,"column":75,"offset":265},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":191},"end":{"line":8,"column":75,"offset":265},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://p5.ssl.qhimg.com/t01752acf18ecbe6aa7.png","alt":"页面区域示意","position":{"start":{"line":10,"column":1,"offset":267},"end":{"line":10,"column":60,"offset":326},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":267},"end":{"line":10,"column":60,"offset":326},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"当鼠标进入某块区域时开始计时， 移出时结束计时。那问题就在于如何判断鼠标的所在区域。","position":{"start":{"line":12,"column":1,"offset":328},"end":{"line":12,"column":43,"offset":370},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":328},"end":{"line":12,"column":43,"offset":370},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"于是， 自然就想到了通过鼠标的坐标来判断所处区域 。","position":{"start":{"line":14,"column":1,"offset":372},"end":{"line":14,"column":27,"offset":398},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":372},"end":{"line":14,"column":27,"offset":398},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution 1","position":{"start":{"line":16,"column":5,"offset":404},"end":{"line":16,"column":15,"offset":414},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":400},"end":{"line":16,"column":15,"offset":414},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"监听鼠标的 mousemove 事件， 获取鼠标的坐标(x, y), 根据它来判断鼠标当前处在哪个区域，然后累加当前区域的记录时间。","position":{"start":{"line":18,"column":1,"offset":416},"end":{"line":18,"column":67,"offset":482},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":416},"end":{"line":18,"column":67,"offset":482},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"此外， 需要对该事件的触发频率进行优化，避免触发频率过快，造成不必要的计算开销。","position":{"start":{"line":20,"column":1,"offset":484},"end":{"line":20,"column":41,"offset":524},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":484},"end":{"line":20,"column":41,"offset":524},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 主要代码</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mouseTrack</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fromEvent</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">,</span> <span class=\"token string\">\"mousemove\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">debounceTime</span><span class=\"token punctuation\">(</span>sampleTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e<span class=\"token operator\">:</span> MouseEvent</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> clientX<span class=\"token punctuation\">,</span> clientY <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e\n      <span class=\"token keyword\">let</span> currentPart<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token comment\">// 计算所在区域</span>\n        Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>clientX <span class=\"token operator\">/</span> unitWidth<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>clientY <span class=\"token operator\">/</span> unitHeight<span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">const</span> now <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        record<span class=\"token punctuation\">[</span>lastPart<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>duration <span class=\"token operator\">+=</span> now <span class=\"token operator\">-</span> tick\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n      tick <span class=\"token operator\">=</span> now\n      lastPart <span class=\"token operator\">=</span> currentPart\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">v</span> <span class=\"token operator\">=></span> v<span class=\"token punctuation\">.</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":22,"column":1,"offset":526},"end":{"line":42,"column":4,"offset":1069},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"问题似乎就这样愉快的被解决了！","position":{"start":{"line":44,"column":1,"offset":1071},"end":{"line":44,"column":16,"offset":1086},"indent":[]}}],"position":{"start":{"line":44,"column":1,"offset":1071},"end":{"line":44,"column":16,"offset":1086},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"但是经过一番测试之后， 发现了一些不足的地方。","position":{"start":{"line":46,"column":1,"offset":1088},"end":{"line":46,"column":24,"offset":1111},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":1088},"end":{"line":46,"column":24,"offset":1111},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"页面加载后， 若鼠标一直不动， 则无法触发事件，进而无法判断所在区域（疑无解）","position":{"start":{"line":48,"column":3,"offset":1115},"end":{"line":48,"column":42,"offset":1154},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":1115},"end":{"line":48,"column":42,"offset":1154},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1113},"end":{"line":48,"column":42,"offset":1154},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"当用户以较快的速度移动，有时导致统计的时间和所在区域对应错误（统计的准确性有待提高）","position":{"start":{"line":49,"column":3,"offset":1157},"end":{"line":49,"column":45,"offset":1199},"indent":[]}}],"position":{"start":{"line":49,"column":3,"offset":1157},"end":{"line":49,"column":45,"offset":1199},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":1155},"end":{"line":49,"column":45,"offset":1199},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"实际需要统计的区域肯定不是简单均分页面的 4 块区域， 实际判断鼠标所在区域的计算会更复杂","position":{"start":{"line":50,"column":3,"offset":1202},"end":{"line":50,"column":48,"offset":1247},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":1202},"end":{"line":50,"column":48,"offset":1247},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":1200},"end":{"line":50,"column":48,"offset":1247},"indent":[]}}],"position":{"start":{"line":48,"column":1,"offset":1113},"end":{"line":50,"column":48,"offset":1247},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"对于 mousemove 这类触发频繁的事件， 在其他如 drag， window resize， scroll 的场景下，可以使用函数节流、防抖等操作优化执行频率，且无明显副作用。但在此需求下，如果时间间隔过大，统计的准确性明显下降，如果时间间隔太小甚至不对触发频率进行限制， 而增加的性能开销也不是我们想要的。","position":{"start":{"line":52,"column":1,"offset":1249},"end":{"line":52,"column":158,"offset":1406},"indent":[]}}],"position":{"start":{"line":52,"column":1,"offset":1249},"end":{"line":52,"column":158,"offset":1406},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"难道，就秉持中庸之道， 取个中间值？","position":{"start":{"line":54,"column":1,"offset":1408},"end":{"line":54,"column":19,"offset":1426},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":1408},"end":{"line":54,"column":19,"offset":1426},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"后期也了解到通过分析搜集海量的这种统计数据， 清洗极端数据， 一通分析之后，也可以得到较准确的结果。单纯的收集鼠标在某个区域的时间意义不大， 主要还是通过海量的数据搜集分析， 进而了解用户在页面上行为、喜好、热点区域等。","position":{"start":{"line":56,"column":1,"offset":1428},"end":{"line":56,"column":111,"offset":1538},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":1428},"end":{"line":56,"column":111,"offset":1538},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"道理是都懂，但是作为一个优秀的程序员， 总是想在自己的一亩三分地写出更好的代码，能不能提供比较准确的数据，又不会产生较大的性能开销？","position":{"start":{"line":58,"column":1,"offset":1540},"end":{"line":58,"column":67,"offset":1606},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1540},"end":{"line":58,"column":67,"offset":1606},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution 2","position":{"start":{"line":60,"column":5,"offset":1612},"end":{"line":60,"column":15,"offset":1622},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1608},"end":{"line":60,"column":15,"offset":1622},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"上述方式需要频繁的触发事件， 主要是为了获取鼠标当前所在区域， 那我就在统计区域上加个透明 div, 当 div 的","position":{"start":{"line":62,"column":1,"offset":1624},"end":{"line":62,"column":59,"offset":1682},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">mouseenter</code>","position":{"start":{"line":62,"column":59,"offset":1682},"end":{"line":62,"column":71,"offset":1694},"indent":[]}},{"type":"text","value":"事件触发时，开始计时， 触发","position":{"start":{"line":62,"column":71,"offset":1694},"end":{"line":62,"column":85,"offset":1708},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">mouseleave</code>","position":{"start":{"line":62,"column":85,"offset":1708},"end":{"line":62,"column":97,"offset":1720},"indent":[]}},{"type":"text","value":"时， 结束计时。加上后，发现由于 div 的遮盖， 页面中的各类按钮，链接都无法触发。这肯定不行， 又查了一下事件穿透， get 了","position":{"start":{"line":62,"column":97,"offset":1720},"end":{"line":62,"column":163,"offset":1786},"indent":[]}},{"type":"link","title":null,"url":"https://www.w3.org/TR/SVG/interact.html#PointerEventsProperty","children":[{"type":"text","value":"pointer-events","position":{"start":{"line":62,"column":164,"offset":1787},"end":{"line":62,"column":178,"offset":1801},"indent":[]}}],"position":{"start":{"line":62,"column":163,"offset":1786},"end":{"line":62,"column":242,"offset":1865},"indent":[]}},{"type":"text","value":"属性.","position":{"start":{"line":62,"column":242,"offset":1865},"end":{"line":62,"column":245,"offset":1868},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1624},"end":{"line":62,"column":245,"offset":1868},"indent":[]}},{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">pointer-events</code>","position":{"start":{"line":64,"column":1,"offset":1870},"end":{"line":64,"column":17,"offset":1886},"indent":[]}},{"type":"text","value":"可以禁用鼠标事件， 允许事件穿透，常用的属性值(auto / none), 其他属性值只适用于 svg 元素","position":{"start":{"line":64,"column":17,"offset":1886},"end":{"line":64,"column":71,"offset":1940},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1870},"end":{"line":64,"column":71,"offset":1940},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"愉快的加上该属性， 发现透明 div 的 mouseenter/mouseleave 事件也被禁止，无法触发了…","position":{"start":{"line":66,"column":1,"offset":1942},"end":{"line":66,"column":62,"offset":2003},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1942},"end":{"line":66,"column":62,"offset":2003},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"稳住心态，思索了一下","position":{"start":{"line":68,"column":1,"offset":2005},"end":{"line":68,"column":11,"offset":2015},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2005},"end":{"line":68,"column":11,"offset":2015},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://p3.ssl.qhimg.com/t012d3f90a084507415.png","alt":"pointer-evnets","position":{"start":{"line":70,"column":1,"offset":2017},"end":{"line":70,"column":68,"offset":2084},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2017},"end":{"line":70,"column":68,"offset":2084},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">鼠标首次移动：\n\t记录开始时间\n\t当前所在区域 pointer-events: none;\n某一区域触发mouseenter事件：\n\t该区域变成 pointer-events: none;\n\t原来区域 pointer-events: all;\n\t记录原区域的停留时间\n\t记录进入新区域的时间</code></pre></div>","position":{"start":{"line":72,"column":1,"offset":2086},"end":{"line":81,"column":4,"offset":2239},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"鼠标当前所在的透明的 div 区域处于事件穿透状态， 其他区域被 div 正常覆盖，当鼠标移入其他区域时， 移入区域变成事件穿透状态(页面的链接、按钮等功能正常)， 原来区域还原。","position":{"start":{"line":83,"column":1,"offset":2241},"end":{"line":83,"column":91,"offset":2331},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":2241},"end":{"line":83,"column":91,"offset":2331},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"通过这种方式，可以较好的解决上面的问题","position":{"start":{"line":85,"column":1,"offset":2333},"end":{"line":85,"column":20,"offset":2352},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":2333},"end":{"line":85,"column":20,"offset":2352},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"不用 mousemove 这种频繁触发的事件，节省了额外的开销","position":{"start":{"line":87,"column":3,"offset":2356},"end":{"line":87,"column":34,"offset":2387},"indent":[]}}],"position":{"start":{"line":87,"column":3,"offset":2356},"end":{"line":87,"column":34,"offset":2387},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2354},"end":{"line":88,"column":1,"offset":2388},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"只要鼠标的移动速度在浏览器的捕获范围内， 它在不同区域之间的切换都能很好的触发事件， 大大提供了统计数据的准确性","position":{"start":{"line":89,"column":3,"offset":2391},"end":{"line":89,"column":59,"offset":2447},"indent":[]}}],"position":{"start":{"line":89,"column":3,"offset":2391},"end":{"line":89,"column":59,"offset":2447},"indent":[]}}],"position":{"start":{"line":89,"column":1,"offset":2389},"end":{"line":89,"column":59,"offset":2447},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2354},"end":{"line":89,"column":59,"offset":2447},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"不足：","position":{"start":{"line":91,"column":1,"offset":2449},"end":{"line":91,"column":4,"offset":2452},"indent":[]}}],"position":{"start":{"line":91,"column":1,"offset":2449},"end":{"line":91,"column":4,"offset":2452},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"pointer-events 的兼容性， 兼容到 IE11 (硬伤)","position":{"start":{"line":93,"column":3,"offset":2456},"end":{"line":93,"column":37,"offset":2490},"indent":[]}}],"position":{"start":{"line":93,"column":3,"offset":2456},"end":{"line":93,"column":37,"offset":2490},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2454},"end":{"line":93,"column":37,"offset":2490},"indent":[]}}],"position":{"start":{"line":93,"column":1,"offset":2454},"end":{"line":93,"column":37,"offset":2490},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"还有一点瑕疵，就是鼠标在不同区域移动时， 需要操作 div 的 pointer-events 属性在 all 和 none 之间切换， 且在非鼠标所在区域，透明 div 是遮挡页面鼠标的各种事件的。能不能不让它遮挡呢？","position":{"start":{"line":95,"column":1,"offset":2492},"end":{"line":95,"column":110,"offset":2601},"indent":[]}}],"position":{"start":{"line":95,"column":1,"offset":2492},"end":{"line":95,"column":110,"offset":2601},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Solution 3","position":{"start":{"line":97,"column":5,"offset":2607},"end":{"line":97,"column":15,"offset":2617},"indent":[]}}],"position":{"start":{"line":97,"column":1,"offset":2603},"end":{"line":97,"column":15,"offset":2617},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"其实，是看中了 pointer-events 的","position":{"start":{"line":99,"column":1,"offset":2619},"end":{"line":99,"column":25,"offset":2643},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">stroke</code>","position":{"start":{"line":99,"column":25,"offset":2643},"end":{"line":99,"column":33,"offset":2651},"indent":[]}},{"type":"text","value":"属性值， 利用它， 可以使得在元素","position":{"start":{"line":99,"column":33,"offset":2651},"end":{"line":99,"column":50,"offset":2668},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"内部","position":{"start":{"line":99,"column":52,"offset":2670},"end":{"line":99,"column":54,"offset":2672},"indent":[]}}],"position":{"start":{"line":99,"column":50,"offset":2668},"end":{"line":99,"column":56,"offset":2674},"indent":[]}},{"type":"text","value":"事件穿透， 在元素","position":{"start":{"line":99,"column":56,"offset":2674},"end":{"line":99,"column":65,"offset":2683},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"边框","position":{"start":{"line":99,"column":67,"offset":2685},"end":{"line":99,"column":69,"offset":2687},"indent":[]}}],"position":{"start":{"line":99,"column":65,"offset":2683},"end":{"line":99,"column":71,"offset":2689},"indent":[]}},{"type":"text","value":"触发事件，极好的满足了我的诉求, 由于该属性只在 SVG 下生效，于是将透明 div 换成了 SVG 元素。","position":{"start":{"line":99,"column":71,"offset":2689},"end":{"line":99,"column":125,"offset":2743},"indent":[]}}],"position":{"start":{"line":99,"column":1,"offset":2619},"end":{"line":99,"column":125,"offset":2743},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://p0.ssl.qhimg.com/t01d62897a2fba37bbe.png","alt":"pointer-events-border","position":{"start":{"line":101,"column":1,"offset":2745},"end":{"line":101,"column":75,"offset":2819},"indent":[]}}],"position":{"start":{"line":101,"column":1,"offset":2745},"end":{"line":101,"column":75,"offset":2819},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"实际测试一番后发现，要以较慢的速度移动鼠标，才会触发 SVG 边框的事件，稍快移动鼠标， 边框就无法捕捉事件。由于边框的宽度有限， 移动太快， 就超出了浏览器的捕捉极限。之后又试着增大了边框的宽度， 但效果变化不是很明显。","position":{"start":{"line":103,"column":1,"offset":2821},"end":{"line":103,"column":112,"offset":2932},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2821},"end":{"line":103,"column":112,"offset":2932},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"感觉有点奇怪， 于是新建一个测试页面，监听一个边框为 1px 的 div，在我的手速极限内， ","position":{"start":{"line":105,"column":1,"offset":2934},"end":{"line":105,"column":48,"offset":2981},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">mouseenter</code>","position":{"start":{"line":105,"column":48,"offset":2981},"end":{"line":105,"column":60,"offset":2993},"indent":[]}},{"type":"text","value":"事件正常触发。但是在 svg 里面为什么触发比较艰难呢？","position":{"start":{"line":105,"column":60,"offset":2993},"end":{"line":105,"column":88,"offset":3021},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2934},"end":{"line":105,"column":88,"offset":3021},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"是浏览器的极限就是这样，还是我写的 SVG 有问题？一直没有解决这个问题，欢迎大家指教 。","position":{"start":{"line":107,"column":1,"offset":3023},"end":{"line":107,"column":46,"offset":3068},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3023},"end":{"line":107,"column":46,"offset":3068},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">drawsvg</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> svgns <span class=\"token operator\">=</span> <span class=\"token string\">\"http://www.w3.org/2000/svg\"</span>\n  <span class=\"token keyword\">let</span> svg <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElementNS</span><span class=\"token punctuation\">(</span>svgns<span class=\"token punctuation\">,</span> <span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span>\n  svg<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// other attribute</span>\n  svg<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pointer-events: none;\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">let</span> polygon <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElementNS</span><span class=\"token punctuation\">(</span>svgns<span class=\"token punctuation\">,</span> <span class=\"token string\">\"polygon\"</span><span class=\"token punctuation\">)</span>\n  polygon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// other attribute</span>\n  polygon<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"style\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pointer-events: stroke;\"</span><span class=\"token punctuation\">)</span>\n\n  svg<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>polygon<span class=\"token punctuation\">)</span>\n  document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>svg<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":109,"column":1,"offset":3070},"end":{"line":123,"column":4,"offset":3532},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"后记","position":{"start":{"line":125,"column":5,"offset":3538},"end":{"line":125,"column":7,"offset":3540},"indent":[]}}],"position":{"start":{"line":125,"column":1,"offset":3534},"end":{"line":125,"column":7,"offset":3540},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"本篇文章主要记录在解决","position":{"start":{"line":127,"column":1,"offset":3542},"end":{"line":127,"column":12,"offset":3553},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"记录鼠标在页面各个区域的停留时间总和","position":{"start":{"line":127,"column":14,"offset":3555},"end":{"line":127,"column":32,"offset":3573},"indent":[]}}],"position":{"start":{"line":127,"column":12,"offset":3553},"end":{"line":127,"column":34,"offset":3575},"indent":[]}},{"type":"text","value":"这一需求时的实现方式的尝试和解决相应问题的进一步尝试。现阶段，选择的是方案二和方案一组合使用，在满足 pointer-events 属性的兼容性情况下，使用方案二， 退之， 则使用第一种方案。","position":{"start":{"line":127,"column":34,"offset":3575},"end":{"line":127,"column":130,"offset":3671},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":3542},"end":{"line":127,"column":130,"offset":3671},"indent":[]}},{"type":"paragraph","children":[{"type":"emphasis","children":[{"type":"text","value":"如文章有任何 bug，欢迎指出","position":{"start":{"line":129,"column":2,"offset":3674},"end":{"line":129,"column":17,"offset":3689},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3673},"end":{"line":129,"column":18,"offset":3690},"indent":[]}},{"type":"text","value":"！","position":{"start":{"line":129,"column":18,"offset":3690},"end":{"line":129,"column":19,"offset":3691},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":3673},"end":{"line":129,"column":19,"offset":3691},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":130,"column":1,"offset":3692}}}}